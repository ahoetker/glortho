apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "glortho.fullname" . }}
  labels:
    {{- include "glortho.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "glortho.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "glortho.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "glortho.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /docs
              port: http
          readinessProbe:
            httpGet:
              path: /docs
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: access_token_expire_minutes
            - name: ALGORITHM
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: algorithm
            - name: FIRST_ADMIN_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: first_admin_username
            - name: FIRST_ADMIN_FULLNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: first_admin_fullname
            - name: FIRST_ADMIN_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: first_admin_email
          volumeMounts:
            - name: secret-key
              mountPath: "/var/secrets/secret_key"
              readOnly: true
            - name: first-admin-password
              mountPath: "/var/secrets/first_admin_password"
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp /var/secrets/secret_key/* /var/secrets/first_admin_password/* /run/secrets
      volumes:
        - name: secret-key
          secret:
            secretName: glortho-secret-key
            items:
              - key: secret_key
                path: secret_key
        - name: first-admin-password
          secret:
            secretName: glortho-first-admin-password
            items:
              - key: first_admin_password
                path: first_admin_password
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
